#             Copyright Kohei Takahashi 2012.
#    Distributed under the Boost Software License, Version 1.0.
#       (See accompanying file LICENSE_1_0.txt or copy at
#             http://www.boost.org/LICENSE_1_0.txt)

import modules ;
import path ;

.$(__name__)-already-initialized = ;

.$(__name__)-subdirs =
  util
  ;

local rule root ( )
{
    if ! $(.$(__name__)-already-initialized)
    {
        local file-path = [ modules.binding $(__name__) ] ;
        .$(__name__)-already-initialized = $(file-path) ;
    }
    return $(.$(__name__)-already-initialized:DT) ;
}

local rule import-really ( module-names + : rule-opt * : rename-opt *
  : search * : prefix : caller-module )
{
    # To be able to use rules in each extensions, import rules as under
    # 'extensions' module.
    local rules = import root ;
    for local m in $(prefix)/$(module-names)
    {
        IMPORT $(__name__) : $(rules) : $(m) : extensions.$(rules) ;
    }

    # Use extensions/original prefix to avoid polluting caller-module's namespace.
    local .prefix = extensions/original/modules ;
    local .rules = import load ;
    IMPORT modules : $(.rules) : $(caller-module) : $(.prefix).$(.rules) ;

    module $(caller-module)
    {
        local .prefix = extensions/original/modules ;
        for local m in $(1)
        {
            local pm = $(5)/$(m) ;
            $(.prefix).load $(pm) : $(m).jam : $(4) ;
            $(.prefix).import $(pm) : $(2) : $(3) ;
        }
    }
}

rule import ( module-names + : rule-opt * : rename-opt * )
{
    local search = [ root ] ;
    search = $(search)/$(.$(__name__)-subdirs) ;

    import-really $(module-names) : $(rule-opt) : $(rename-opt)
      : $(search) : $(__name__) : [ CALLER_MODULE ] ;
}
