#             Copyright Kohei Takahashi 2012.
#    Distributed under the Boost Software License, Version 1.0.
#       (See accompanying file LICENSE_1_0.txt or copy at
#             http://www.boost.org/LICENSE_1_0.txt)

import modules ;
import path ;
import set ;

.$(__name__)-already-initialized = ;

.$(__name__)-subdirs =
  util
  ;

local rule root ( )
{
    if ! $(.$(__name__)-already-initialized)
    {
        local file-path = [ modules.binding $(__name__) ] ;
        .$(__name__)-already-initialized = $(file-path) ;
    }
    return $(.$(__name__)-already-initialized:DT) ;
}

# In pre-import/import-really, use extensions/original prefix to avoid polluting
# caller-module's namespace.
local rule pre-import ( module-names + : search * : prefix : caller-module )
{
    # To be able to use rules in each extensions, import rules as under
    # 'extensions' module.
    local rules = import root ;
    for local m in $(prefix)/$(module-names)
    {
        IMPORT $(__name__) : $(rules) : $(m) : extensions.$(rules) ;
    }

    IMPORT modules : load : $(caller-module)
      : extensions/original/modules.load ;

    module $(caller-module)
    {
        local .modules = extensions/original/modules ;
        for local m in $(1)
        {
            $(.modules).load $(3)/$(m) : $(m).jam : $(2) ;
        }
    }
}

local rule import-really ( module-names + : rule-opt * : rename-opt *
  : prefix : caller-module )
{
    IMPORT modules : import : $(caller-module)
      : extensions/original/modules.import ;

    module $(caller-module)
    {
        local .modules = extensions/original/modules ;
        for local m in $(1)
        {
            $(.modules).import $(4)/$(m) : $(2) : $(3) ;
        }
    }
}

.$(__name__)-loaded = ;
rule import ( module-names + : rule-opt * : rename-opt * )
{
    local caller = [ CALLER_MODULE ] ;

    # Check and skip already loaded modules to avoid recursive importing.
    local load = [ set.difference $(module-names) : $(.$(__name__)-loaded) ] ;
    if $(load)
    {
        .$(__name__)-loaded += $(load) ;

        local search = [ root ] ;
        search = $(search)/$(.$(__name__)-subdirs) ;

        pre-import $(load) : $(search) : $(__name__) : $(caller) ;
    }
    import-really $(module-names) : $(rule-opt) : $(rename-opt)
      : $(__name__) : $(caller) ;
}
